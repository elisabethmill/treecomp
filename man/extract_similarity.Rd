% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_similarity.R
\name{extract_similarity}
\alias{extract_similarity}
\title{Extract Random Forest Similarity Scores}
\usage{
extract_similarity(object, newdata, refdata, match_training = TRUE)
}
\arguments{
\item{object}{A fitted random forest model. Must be an object of class \code{"ranger"} (from the
\pkg{ranger} package) or \code{"randomForest"} (from the \pkg{randomForest} package).}

\item{newdata}{A data frame or matrix of new observations to compare against \code{refdata}.}

\item{refdata}{A data frame or matrix containing the reference data points (e.g., training data
or held-out data).}

\item{match_training}{Logical. If \code{TRUE}, uses in-bag sampling frequencies to weight the
similarity scores based on how often each reference point appeared in each bootstrap sample.
Must be \code{TRUE} if \code{refdata} was used to train the model and you want the similarity to
reflect the adaptive nearest neighbor weighting. For this to work, \code{object} must have kept
track of the training inbag counts, i.e. \code{keep.inbag = TRUE}, which is not default behavior.}
}
\value{
A numeric matrix of dimension \code{nrow(newdata)} by \code{nrow(refdata)}, where each
entry represents the similarity score between a new point and a reference point. The rows sum
(approximately) to 1.
}
\description{
Calculates similarity scores between new observations and reference data points based on a
fitted random forest model. The similarity reflects the frequency with which each new data point
shares terminal nodes with each reference data point across the forest, weighted appropriately.
This corresponds to the adaptive nearest neighbors interpretation of random forests.
}
\details{
Supports random forest models fitted with either the \pkg{ranger} or \pkg{randomForest} package.

For each tree in the forest, new and reference points are considered similar if they fall into
the same terminal node. Similarity scores are calculated as the normalized frequency with which
pairs share terminal nodes, adjusted by the in-bag counts of reference points when
\code{match_training = TRUE}. This weighting ensures that predictions made using these
similarity scores match the forest's behavior when trained using bootstrap samples.

The function requires that \code{inbag.counts} (for \code{ranger}) or \code{inbag}
(for \code{randomForest}) be available in the fitted object when \code{match_training = TRUE}.
}
\examples{
\dontrun{
# With ranger
library(ranger)
rf_ranger <- ranger(Sepal.Length ~ ., data = iris, num.trees = 100, keep.inbag = TRUE)
sim_ranger <- extract_similarity(rf_ranger, newdata = iris, refdata = iris)

# With randomForest
library(randomForest)
rf_rf <- randomForest(Sepal.Length ~ ., data = iris, ntree = 100, keep.inbag = TRUE)
sim_rf <- extract_similarity(rf_rf, newdata = iris, refdata = iris)
}

}
